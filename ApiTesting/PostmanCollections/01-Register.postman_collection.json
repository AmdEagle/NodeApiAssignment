{
	"info": {
		"_postman_id": "d18429ba-9b6d-44ea-8469-a76f123f2a03",
		"name": "01-Register api testing",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "GetValidUserCheckFlag",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"IsUserValidationRequired\", jsonData[\"IsUserValidationRequired\"]);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{HostIpAddress}}:{{HostPort}}/getValidUserCheckFlag",
					"host": [
						"{{HostIpAddress}}"
					],
					"port": "{{HostPort}}",
					"path": [
						"getValidUserCheckFlag"
					]
				}
			},
			"response": []
		},
		{
			"name": "Register multiple Students to a Teacher-jack",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"teacher\": \"teacherjack@gmail.com\",\r\n  \"students\":\r\n    [\r\n      \"studentjuliet@gmail.com\",\r\n      \"studentjohn@gmail.com\"\r\n    ]\r\n}"
				},
				"url": {
					"raw": "{{HostIpAddress}}:{{HostPort}}/api/register",
					"host": [
						"{{HostIpAddress}}"
					],
					"port": "{{HostPort}}",
					"path": [
						"api",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "Register multiple Students to a Teacher-sayid",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"teacher\": \"teachersayid@gmail.com\",\r\n  \"students\":\r\n    [\r\n      \"studentjames@gmail.com\",\r\n      \"studentdesmond@gmail.com\"\r\n    ]\r\n}"
				},
				"url": {
					"raw": "{{HostIpAddress}}:{{HostPort}}/api/register",
					"host": [
						"{{HostIpAddress}}"
					],
					"port": "{{HostPort}}",
					"path": [
						"api",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "Register a Student to Multiple Teachers",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"student\": \"studentwalt@gmail.com\",\r\n  \"teachers\" : \r\n  [\r\n      \"teachersayid@gmail.com\",\r\n      \"teacherjack@gmail.com\"\r\n  ]\r\n}"
				},
				"url": {
					"raw": "{{HostIpAddress}}:{{HostPort}}/api/register",
					"host": [
						"{{HostIpAddress}}"
					],
					"port": "{{HostPort}}",
					"path": [
						"api",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "Register a Student to a Teacher",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"teacher\" : \"teacherjack@gmail.com\",\r\n  \"student\" : \"studentben@gmail.com\"\r\n}"
				},
				"url": {
					"raw": "{{HostIpAddress}}:{{HostPort}}/api/register",
					"host": [
						"{{HostIpAddress}}"
					],
					"port": "{{HostPort}}",
					"path": [
						"api",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "Re-register Students",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"teacher\": \"teacherjack@gmail.com\",\r\n  \"students\":\r\n    [\r\n      \"studentwalt@gmail.com\",\r\n      \"studentjohn@gmail.com\"\r\n    ]\r\n}"
				},
				"url": {
					"raw": "{{HostIpAddress}}:{{HostPort}}/api/register",
					"host": [
						"{{HostIpAddress}}"
					],
					"port": "{{HostPort}}",
					"path": [
						"api",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "Missing Teacher info from Users Table",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"if (pm.environment.get(\"IsUserValidationRequired\"))\r",
							"{\r",
							"    pm.test(\"Status code is 400\", function () {\r",
							"        pm.response.to.have.status(400);\r",
							"    });\r",
							"    pm.test(\"Missing Teacher info error message shown\", function () {\r",
							"        var jsonData = pm.response.json();\r",
							"        pm.expect(jsonData.message).to.eql(\"Bad Request: Please ensure all the teachers and students belong to Users Table. Invalid Users are: randomTeacher@gmail.com\");\r",
							"    });\r",
							"}\r",
							"else\r",
							"{\r",
							"    pm.test(\"Status code is 204\", function () \r",
							"    {\r",
							"        pm.response.to.have.status(204);\r",
							"    });\r",
							"}\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"teacher\": \"randomTeacher@gmail.com\",\r\n  \"students\":\r\n    [\r\n      \"studentwalt@gmail.com\",\r\n      \"studentjohn@gmail.com\"\r\n    ]\r\n}"
				},
				"url": {
					"raw": "{{HostIpAddress}}:{{HostPort}}/api/register",
					"host": [
						"{{HostIpAddress}}"
					],
					"port": "{{HostPort}}",
					"path": [
						"api",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "Missing Student info from Users Table",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"if (pm.environment.get(\"IsUserValidationRequired\"))\r",
							"{\r",
							"    pm.test(\"Status code is 400\", function () {\r",
							"        pm.response.to.have.status(400);\r",
							"    });\r",
							"    pm.test(\"Missing Student info error message shown\", function () {\r",
							"        var jsonData = pm.response.json();\r",
							"        pm.expect(jsonData.message).to.eql(\"Bad Request: Please ensure all the teachers and students belong to Users Table. Invalid Users are: random@gmail.com\");\r",
							"    });\r",
							"}\r",
							"else\r",
							"{\r",
							"    pm.test(\"Status code is 204\", function () \r",
							"    {\r",
							"        pm.response.to.have.status(204);\r",
							"    });\r",
							"}\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"teacher\": \"teacherjack@gmail.com\",\r\n  \"students\":\r\n    [\r\n      \"studentwalt@gmail.com\",\r\n      \"random@gmail.com\"\r\n    ]\r\n}"
				},
				"url": {
					"raw": "{{HostIpAddress}}:{{HostPort}}/api/register",
					"host": [
						"{{HostIpAddress}}"
					],
					"port": "{{HostPort}}",
					"path": [
						"api",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "Missing Teacher Info from Input",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"pm.test(\"Missing Teacher info error message shown\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.eql(\"Bad Request: [Missing]- request teacher info\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"students\":\r\n    [\r\n      \"studentwalt@gmail.com\",\r\n      \"studentjohn@gmail.com\"\r\n    ]\r\n}"
				},
				"url": {
					"raw": "{{HostIpAddress}}:{{HostPort}}/api/register",
					"host": [
						"{{HostIpAddress}}"
					],
					"port": "{{HostPort}}",
					"path": [
						"api",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "Missing Student Info from Input",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"pm.test(\"Missing Student info error message shown\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.eql(\"Bad Request: [Missing]- request student info\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"teacher\": \"teacherjack@gmail.com\"\r\n}"
				},
				"url": {
					"raw": "{{HostIpAddress}}:{{HostPort}}/api/register",
					"host": [
						"{{HostIpAddress}}"
					],
					"port": "{{HostPort}}",
					"path": [
						"api",
						"register"
					]
				}
			},
			"response": []
		}
	]
}